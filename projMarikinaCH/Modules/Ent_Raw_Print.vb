Imports System.Drawing.Printing
Imports ADODB
Module Ent_Raw_Print
    Public xLO As Boolean = False
    Public xLOuid As String = vbNullString

    Public PrintData As String

    Dim IsFirst As Boolean
    Dim DN As Date
    Dim pc As String
    Dim r_count As String
    Dim BIR_ID As String
    Dim IsLogin As Boolean
    Dim MaxR As String
    Dim MinR As String

    Public Sub Print(ByVal MSG As String)
        PrintData = PrintData & MSG & vbCrLf
    End Sub

    Public Sub Clear_PrintData()
        PrintData = vbNullString
    End Sub

    Public Enum ESC As Integer
        Defaul = 0
        Center = 1
        RightJ = 2
        LeftJ = 3
    End Enum

    Public Function ESC_COM(ByVal esc As ESC) As String
        Dim _center As String = Chr(27) & Chr(97) & Chr(esc)
        Return _center
    End Function

#Region "Print Stay IN"

    Public Sub PrintRaw_Now(ByVal Opname As String, ByVal OrasdtIn As Date, ByVal LogAdmin As String)
        Try
            Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)
            Dim Line As String = "----------------------------------------"

            ' Print(ESC_COM(ESC.Center))
            Print(My.Settings.TITLE)
            Print(My.Settings.ADDR)
            Print(Line)
            Print("STAY IN REPORT")
            Print(Line)
            Dim busDate As Date = My.Settings.BussDate
            Print("Bussiness Date : " & Format(busDate, "yyyy-MM-dd"))
            'Print("Operator : " & Opname)
            Print("Generated By : " & LogAdmin)
            Print(Line)
            Print("STAY IN VEHICLES")
            Print(Line)

            Dim rs1 As New Recordset
            Dim lup As Long
            rs1 = New Recordset

            rs1 = conSqlPOS.Execute("CALL get_StayIN")
            If rs1.EOF = False Then
                For lup = 1 To rs1.RecordCount
                    '  Sleep(30)
                    Dim timeIN As DateTime = CDate(rs1("TimeIn").Value)
                    Print(rs1("Plate").Value & "   " & Format(timeIN, "yyyy-MM-dd HH:mm"))
                    rs1.MoveNext()
                Next
            End If

            Print(Line)
            Print("****** END OF REPORT ******")

            Print(output)

            _P(PrintData)

            Clear_PrintData()
        Catch ex As Exception
            Save_ErrLogs("[PrintRaw_Now] Ent_Raw_Print", ex.Message)
        End Try
    End Sub
#End Region

#Region "Print Receipt"
    Public Sub PrintReceiptRaw_Now()
        Try
            'On Error Resume Next
            ' Dim cd As New 'Company_Ref
            Dim OPname As String = "" 'Operator_Name
            Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)
            Dim INiprinter As String = Chr(27) & Chr(64)
            Dim Line As String = "----------------------------------------"
            ' cd = Get_Comp()

            Dim POSVer As String = My.Settings.POS_VER

            Select Case POSVer
                Case "BIR BASED"
                    Print(ESC_COM(ESC.Center))
                    Print(My.Settings.TITLE)
                    Print(My.Settings.ADDR)
                    'Print("AREA : " & cd.Company_LOC)
                    Print("TIN# : " & P_TIN)
                    Print("MS# : " & P_Machine)
                    Print("SN# : " & P_Serial)

                    Print("Terminal : " & P_Station)
                    Print("CASHIER : " & P_Teller)
                Case "GOVERNMENT BASED"
                    Print(ESC_COM(ESC.Center))
                    Print(My.Settings.TITLE)
                    Print(My.Settings.N_OperatedBy)
                    Print("Terminal : " & P_Station)
                    Print("CASHIER : " & P_Teller)
            End Select

            Print(Line)

            Print("Official-Receipt # " & ESC_COM(ESC.RightJ) & P_ORno)
            Print(ESC_COM(ESC.Defaul))
            Print("CardCode       : " & P_CardCode)
            Print("Plate#         : " & P_PlateNo)
            Print("Vehicle        : " & P_Vehicle)
            Print("Time-in        : " & P_EntTime)
            Print("Time-Out       : " & P_ExtTime)
            Print("Time           : " & P_TotalTime)
            Print(Line)
            Print("COMPUTATION")
            ' ''Print("Regular        : P " & x.Regular)
            'Print(vbNullString)
            'If x.Overnight <> 0 Then Print("Overnight      : p " & x.Overnight)

            Print("Regular Due     : P " & MakeMoney(P_RegDue))
            If P_Overnigth <> 0 Then Print("Overnight Due   : P" + " " + MakeMoney(P_Overnigth))
            If P_Lost <> 0 Then Print("LostCard        : P" + " " + MakeMoney(P_Lost))


            If P_Discount <> 0 Then
                Print(vbNullString)
                Print("**** Discount ****")
                Print("Type            : " + P_DiscountType + FormatPercent(P_DiscPer, 0))
                Print("Amount          : P" + " " + MakeMoney(P_Discount))
            End If

            'If CDbl(x.Compli) = 0 Then

            '    If x.CreditType = "-" Then
            '        Print("Cash           : P " & x.Cash)
            '    Else
            '        Print("Cash           : P " & x.Cash)
            '        Print("***" & x.CreditType & "****")
            '        Print("Reference-#    :   " & x.CreditCardRef)
            '        Print("AMT            : P " & x.Credit)
            '    End If

            'Else
            '    Print("Compliment    : P " & x.Compli)
            'End If

            Print(vbNullString)
            Print("Total           : P " & MakeMoney(P_Total))
            Print("Amount Tendered : P " + MakeMoney(P_Tendered))
            Print("Change          : P " + MakeMoney(P_Change))

            If POSVer = "BIR BASED" Then
                Print(vbNullString)
                Print("VAT Sale        : " & "P " & MakeMoney(P_Vatable))
                Print("VAT Exempt      : " & "P " & MakeMoney(P_VatExempt))
                Print("VAT Zero Rated  : " & "P " & MakeMoney(P_ZeroRated))
                Print("VAT             : " & "P " & MakeMoney(P_Vat))
            End If

            'Print(Line)
            'Other_Print(x)
            Select Case POSVer
                Case "BIR BASED"
                    Print(vbNullString)
                    If ReceiptType = "Senior" Or P_VatExempt <> 0 Then
                        Print("NAME OF SC/PWD: _______________________")
                        Print("ADDRESS: ______________________________")
                        Print("OSCA ID No./PWD ID No.: _______________")
                        Print("TIN: __________________________________")
                        Print("SC/PWD Signature: _____________________")
                    Else
                        Print("NAME OF PARKER: _______________________")
                        Print("ADDRESS: ______________________________")
                        Print("TIN: __________________________________")
                    End If

                    'Print("Name of Parker:_________________________________")
                    'Print("Address:________________________________________")
                    'Print("TIN:____________________________________________")

                    Print(ESC_COM(ESC.Center))

                    Print(Line)
                    Print("Vendor Company Name")
                    Print("Vendor Address")
                    Print("VAT Reg. TIN : 000-000-000-000")
                    Print(" ")
                    Print("ACCR# : " & P_ACCR)
                    Print("ACCR Date : " & Format(My.Settings.N_AccrDate, "yyyy-MM-dd"))
                    Print("PERMIT : " & P_Permit)
                    Print("Permit Date Effective : " & Format(My.Settings.N_PermitDateIssued, "yyyy-MM-dd"))
                    Print(Line)

                    Print("THIS OFFICIAL RECEIPT SHALL BE VALID FOR")
                    Print("5 YEARS FROM THE DATE OF")
                    Print("THE PERMIT TO USE")
                    Print(output)
                Case "GOVERNMENT BASED"
                    Print(vbNullString)
                    If conLocal() = True Then
                        Dim rs As New Recordset
                        rs = conSqlLoc.Execute("select Regulation from tblreceiptreg")
                        For lup = 1 To rs.RecordCount
                            Print(rs("Regulation").Value.ToString)
                            rs.MoveNext()
                        Next
                    End If
                    Print(output)
            End Select


            'Print("CASHIER : " & OPname)

            _P(PrintData)

            Clear_PrintData()
        Catch ex As Exception
            Save_ErrLogs("[PrintReceiptRaw_Now] Ent_Raw_Print", ex.Message)
        End Try
    End Sub
#End Region

#Region "Print Cashier Logout"
    Public Sub printCAshierRaw(ByVal Opname As String, ByVal BussDt As Date)
        Try
            Cursor.Current = Cursors.WaitCursor

            OperatorName = Opname
            'UserPangalan = Usernem
            BussPetsa = BussDt
            'PetsaDtout = OrasdtOut

            'frmSummRep.picLoading.Visible = True
            'Print the receipt text
            Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)

            Dim POSVer As String = My.Settings.POS_VER

            Select Case POSVer
                Case "BIR BASED"
                    Print(My.Settings.TITLE)
                    Print(My.Settings.ADDR)
                    Print(" Contact No.: " & My.Settings.CONTACT)
                    Print(" Permit #: " & My.Settings.PERMIT)
                    Print(" TIN : " & My.Settings.TIN)
                    Print(" Accr #: " & My.Settings.ACCR)
                    Print(" Machine #:" & My.Settings.MACHINE)
                    Print(" SN #:" & My.Settings.SERIAL)
                Case "GOVERNMENT BASED"
                    Print(My.Settings.TITLE)
                    Print(My.Settings.N_OperatedBy)
            End Select


            'Print("___________________________________________________________________________")
            Print("----------------------------------------")
            Print("OPERATOR'S  LOG-OUT  REPORT")
            Print("----------------------------------------")

            Dim strOp As String = OperatorName
            Dim strStation As String = MainForm.txtStation.Text

            Dim time1 As Date '= DtinFrm(strOp, strStation, BussPetsa)
            Dim time2 As Date '= DtOutTo(strOp, strStation, BussPetsa)

            Dim TotalTrans As Integer
            Dim TotalGraceCnt As Integer = 0
            Dim TotalGraceCntM As Integer = 0
            Dim TotalLostCnt As Integer = 0
            Dim TotalTrCount As Integer = 0
            Dim TotalRetail As Integer = 0
            Dim TotalMotor As Integer = 0

            Dim TotalManual As Integer = 0

            Dim NetSale As Double = 0
            Dim VatAmt As Double = 0
            Dim VatSale As Double = 0
            Dim VatExempt As Double = 0

            Dim strBussDate As String = Format(BussPetsa, "yyyy-MM-dd")

            Dim rsLO As New Recordset
            rsLO = conSqlPOS.Execute("CALL get_LO_Rep('" & strStation & "','" & strOp & "','" & strBussDate & "');")
            If rsLO.EOF = False Then
                MinR = rsLO("MinOR").Value
                MaxR = rsLO("MaxOR").Value
                time1 = rsLO("MinTime").Value
                time2 = rsLO("MaxTime").Value
                NetSale = CDbl(rsLO("TotalNet").Value)
                VatAmt = CDbl(rsLO("TotalVat").Value)
                VatSale = CDbl(rsLO("TotalVatSale").Value)
                VatExempt = CDbl(rsLO("TotalVatExempt").Value)
            End If

            Dim TotalPartialCash As Double = PartialCashOut(BussPetsa, strOp)
            Dim TotalCash As Double = DiffSaleCashOut(NetSale, TotalPartialCash)

            Print("Time From : " & Format(time1, "yyyy-MM-dd HH:mm:00"))
            Print("Time To : " & Format(time2, "yyyy-MM-dd HH:mm:00"))
            Print("Operator : " & strOp)
            Print("Station : " & strStation)
            Print("From ORno :" & MinR)
            Print("To ORno :" & MaxR)

            Print("----------------------------------------")
            Print("Transaction Summary")
            Print("----------------------------------------")

            Dim rsGp As New Recordset
            rsGp = conSqlPOS.Execute("CALL get_LO_Gp('" & strStation & "','" & strOp & "','" & strBussDate & "');")
            Do While rsGp.EOF = False
                Try
                    If CInt(rsGp("GpCnt").Value) <> 0 Then
                        Print(rsGp("VehicleType").Value & " " & rsGp("GpCnt").Value & " P 0.00")
                        TotalTrans = TotalTrans + CInt(rsGp("GpCnt").Value)
                    End If
                    rsGp.MoveNext()
                Catch ex As Exception

                End Try
            Loop

            Dim rsVeh As New Recordset
            rsVeh = conSqlPOS.Execute("CALL get_LO_Veh('" & strStation & "','" & strOp & "','" & strBussDate & "');")
            Do While rsVeh.EOF = False
                Print(rsVeh("VehicleType").Value & " " & rsVeh("VehCount").Value & " P " & MakeMoney(rsVeh("VehTotalAmt").Value))
                TotalTrans = TotalTrans + CInt(rsVeh("VehCount").Value)
                rsVeh.MoveNext()
            Loop

            Dim rsLC As New Recordset
            rsLC = conSqlPOS.Execute("CALL get_LO_LostCard('" & strStation & "','" & strOp & "','" & strBussDate & "');")
            If rsLC.EOF = False Then
                Try
                    TotalLostCnt = rsLC("LostCnt").Value
                    If TotalLostCnt <> 0 Then
                        Print("LOST CARD" & " " & TotalLostCnt & " P " & MakeMoney(Val(rsLC("TotalLC").Value)))
                        TotalTrans = TotalTrans + CInt(rsLC("LostCnt").Value)
                    End If
                Catch ex As Exception

                End Try

            End If

            'Dim rsOvn As New Recordset
            'rsOvn = conSqlPOS.Execute("CALL get_LO_Ovn('" & strStation & "','" & strOp & "','" & strBussDate & "');")
            'If rsOvn.EOF = False Then
            '    Try
            '        If CInt(rsOvn("TotalOvn").Value) <> 0 Then
            '            Print("OVERNIGHT" & " " & TotalLostCnt & "P " & MakeMoney(Val(rsOvn("TotalOvn").Value)))
            '            TotalTrans = TotalTrans + CInt(rsOvn("TotalOvn").Value)
            '        End If
            '    Catch ex As Exception

            '    End Try
            'End If

            Print("----------------------------------------")

            TotalTrCount = TotalTrans
            Print("Total Transaction : " & TotalTrCount)

            Print("----------------------------------------")


            Print("Total Sales :" & " P" + " " + MakeMoney(NetSale))
            Print("Partial Cash Out :" & " P" + " " + MakeMoney(TotalPartialCash))
            Print("Total Cash :" & " P" + " " + MakeMoney(TotalCash))

            If POSVer = "BIR BASED" Then
                Print("Total VAT Sales :" & " P" + " " + MakeMoney(VatSale))
                Print("Total VAT Exempt :" & " P" + " " + MakeMoney(VatExempt))
                Print("Total VAT Zero Rated :" & " P" + " " + MakeMoney(0))
                Print("Total VAT :" & " P" + " " + MakeMoney(VatAmt))
            End If


            Print("                     ")
            Print("                     ")

            Print("Signature : ____________________________")

            Print("                     ")

            Print("****** END OF REPORT ******")

            Print("                     ")
            Print("                     ")

            Print(output)
            _P(PrintData)

            Cursor.Current = Cursors.Arrow

            Sleep(300)
        Catch ex As Exception
            If ex.Message = "Conversion from type 'DBNull' to type 'String' is not valid." Then
                MessageBox.Show("No record found!", "Logout Report", MessageBoxButtons.OK, MessageBoxIcon.Warning)
                Exit Sub
            End If
            MessageBox.Show(ex.Message, "Print Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            Save_ErrLogs("printCAshierRaw", ex.Message)
        End Try
    End Sub
#End Region

#Region "Print Station Logout"
    Public Sub printStationRaw(ByVal dtFrm As Date, ByVal dtTo As Date)
        ShiftFrm = dtFrm
        ShiftTo = dtTo

        Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)

        Print(My.Settings.TITLE)
        Print(My.Settings.ADDR)
        Print(" Contact No.: " & My.Settings.CONTACT)
        Print(" Permit #: " & My.Settings.PERMIT)
        Print(" TIN : " & My.Settings.TIN)
        Print(" Accr #: " & My.Settings.ACCR)
        Print(" Machine #:" & My.Settings.MACHINE)
        Print(" SN #:" & My.Settings.SERIAL)

        Print("----------------------------------------")
        Print("STATION'S  LOG-OUT  REPORT")
        Print("----------------------------------------")

        Dim strStation As String = MainForm.txtStation.Text

        Dim FromOr As String = sOrFrom(strStation)
        Dim ToOr As String = sOrTo(strStation)

        Dim NetSale As Double = sTotalNet(strStation)
        Dim VatAmt As Double = VAT(NetSale)
        Dim VatSale As Double = Comp_Vat_sale(NetSale, VatAmt)

        Print("Bussines Date : " & Format(My.Settings.BussDate, "yyyy-MM-dd"))

        Print("Time From : " & Format(Format(ShiftFrm, "yyyy-MM-dd HH:mm:ss")))
        Print("Time To : " & Format(Format(ShiftTo, "yyyy-MM-dd HH:mm:ss")))
        Print("Station : " & strStation)
        Print("From ORno : " & FromOr)
        Print("To ORno : " & ToOr)

        Print("----------------------------------------")
        Print("Cashier Summary")
        Print("----------------------------------------")

        Dim strBussDate As String = Format(PetsaBuss, "yyyy-MM-dd")
        Dim strFrm As String = Format(ShiftFrm, "yyyy-MM-dd HH:mm:00")
        Dim strTo As String = Format(ShiftTo, "yyyy-MM-dd HH:mm:59")
        'Dim strTime2 As String = Format(time2, "yyyy-MM-dd HH:mm:ss")
        Dim rs As New Recordset
        rs = New Recordset

        rs = conSqlPOS.Execute("select Operator,Count(Operator)as OpCount,sum(total)as OpTotalAmt from tblincomereport where Station = '" & strStation & "' and TimeOut >= '" & strFrm & "' and  TimeOut <= '" & strTo & "' group by Operator")
        Do While rs.EOF = False
            Dim kahera As String = rs("Operator").Value
            Dim TotalbyKahera As Double = rs("OpTotalAmt").Value
            Dim time1 As Date = SDtinFrm(kahera, strStation)
            Dim time2 As Date = SDtOutTo(kahera, strStation)

            Print("Cashier : " & kahera)
            Print("Time From : " & time1)
            Print("Time To : " & time2)
            Print("Cashier Total Sales : " & "P " & MakeMoney(TotalbyKahera))
            Print("                     ")

            rs.MoveNext()
        Loop

        Print("----------------------------------------")
        Print("Transaction Summary")
        Print("----------------------------------------")

        Dim TotalTrans As Integer = sTotalTR(strStation)
        Dim VipTotalCnt As Integer = VipOutCount(ShiftFrm, ShiftTo) + VipInOutCount(ShiftFrm, ShiftTo)
        Dim TotalGraceCnt As Integer = 0
        Dim TotalGraceCntM As Integer = 0
        Dim TotalLostCnt As Integer = 0
        Dim TotalTrCount As Integer = 0
        Dim TotalRetail As Integer = 0
        Dim TotalMotor As Integer = 0
        Dim TotalManual As Integer = 0


        Dim rsVeh As New Recordset
        rsVeh = New Recordset

        rsVeh = conSqlPOS.Execute("select VehicleType from tblcharge")

        If rsVeh.EOF = False Then
            Dim VehTyp As String
            Do While rsVeh.EOF = False
                VehTyp = rsVeh("VehicleType").Value
                Dim rs1 As New Recordset
                rs1 = New Recordset

                rs1 = conSqlPOS.Execute("select Count(VehicleType)as VehicleCount from tblincomereport where PayType = 'GracePeriod' and VehicleType = '" & VehTyp & "' and Station = '" & strStation & "' and TimeOut >= '" & strFrm & "' and  TimeOut <= '" & strTo & "'")
                Do While rs1.EOF = False
                    TotalGraceCnt = TotalGraceCnt + Val(rs1("VehicleCount").Value)
                    If Val(rs1("VehicleCount").Value) <> 0 Then
                        Print("GP " & VehTyp & " " & rs1("VehicleCount").Value & " P 0.00")
                    End If
                    rs1.MoveNext()
                Loop
                rsVeh.MoveNext()
            Loop
        End If

        Print("VIP " & VipTotalCnt & " P 0.00")

        Dim rs3 As New Recordset
        rs3 = New Recordset

        rs3 = conSqlPOS.Execute("select VehicleType,Count(VehicleType)as VehicleCount,sum(total)as VehicleTotalAmt from tblincomereport where Station = '" & strStation & "' and PayType <> 'GracePeriod' and PayType <> 'Manual' and LostCard = 0 and TimeOut >= '" & strFrm & "' and  TimeOut <= '" & strTo & "' group by VehicleType")
        Do While rs3.EOF = False
            TotalRetail = TotalRetail + Val(rs3("VehicleCount").Value)
            Print(rs3("VehicleType").Value & " " & rs3("VehicleCount").Value & "P " & MakeMoney(rs3("VehicleTotalAmt").Value))
            rs3.MoveNext()
        Loop

        Dim rs2 As New Recordset
        rs2 = New Recordset

        rs2 = conSqlPOS.Execute("select Count(LostCard)as LostCount,Sum(total) as LostAmt from tblincomereport where LostCard > 0 and Station = '" & strStation & "' and TimeOut >= '" & strFrm & "' and  TimeOut <= '" & strTo & "'")
        Do While rs2.EOF = False
            TotalLostCnt = rs2("LostCount").Value

            If TotalLostCnt = 0 Then
                Print("LOST CARD" & " " & TotalLostCnt & " P 0.00")
            Else
                Print("LOST CARD" & " " & TotalLostCnt & " P " & MakeMoney(rs2("LostAmt").Value))
            End If
            rs2.MoveNext()
        Loop

        Dim rs4 As New Recordset
        rs4 = New Recordset

        rs4 = conSqlPOS.Execute("select Count(PayType)as ManCount,Sum(total) as ManAmt from tblincomereport where PayType = 'Manual' and Station = '" & strStation & "' and TimeOut >= '" & strFrm & "' and  TimeOut <= '" & strTo & "'")
        Do While rs4.EOF = False

            TotalManual = rs4("ManCount").Value

            If TotalManual = 0 Then
                Print("MANUAL INPUT " & TotalManual & " P 0.00")
            Else
                Print("MANUAL INPUT " & TotalManual & " P " & MakeMoney(Val(rs4("ManAmt").Value)))
            End If
            rs4.MoveNext()
        Loop


        Print("----------------------------------------")

        TotalTrCount = TotalGraceCnt + VipTotalCnt + TotalLostCnt + TotalRetail + TotalMotor + TotalGraceCntM + TotalManual
        Print("Total Transaction : " & TotalTrCount)

        Print("----------------------------------------")

        Print("Total Sales :" & " P" + " " + MakeMoney(NetSale))

        Print("Total VAT :" & " P" + " " + MakeMoney(VatAmt))

        Print("Total VAT Sales :" & " P" + " " + MakeMoney(VatSale))

        Print("Signature : _______________________________")

        Print("****** END OF REPORT ******")

        Print("                     ")
        Print("                     ")

        Print(output)
        _P(PrintData)

    End Sub
#End Region

#Region "Print Z Read"
    Sub ZreadRaw(ByVal zreaddt As Date)

        Try

            Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)

            Dim POSVer As String = My.Settings.POS_VER

            Select Case POSVer
                Case "BIR BASED"
                    Print(My.Settings.TITLE)
                    Print(My.Settings.ADDR)
                    Print(" Contact No.: " & My.Settings.CONTACT)
                    Print(" Permit #: " & My.Settings.PERMIT)
                    Print(" TIN : " & My.Settings.TIN)
                    Print(" Accr #: " & My.Settings.ACCR)
                    Print(" Machine #:" & My.Settings.MACHINE)
                    Print(" SN #:" & My.Settings.SERIAL)
                Case "GOVERNMENT BASED"
                    Print(My.Settings.TITLE)
                    Print(My.Settings.N_OperatedBy)
            End Select

            Print("----------------------------------------")
            Print("Z-READING REPORT")
            Print("----------------------------------------")
            'Print("Z reading Counter : " & getZcounter())

            'Dim zCnt As Long = CInt(getZcounter())
            Dim rs As New Recordset
            Dim Scon As String = vbNullString
            Dim Ops As String = vbNullString
            Dim a As String = Format(zreaddt, "yyyy-MM-dd")
            Dim POS As String = MainForm.txtStation.Text
            ' DN = Format(strlastEOD, "yyyy-MM-dd HH:mm:ss")

            Print("Report Date : " & a)
            Print("Station : " & POS)
            Print("Generated By : " & nem)

            Dim TNS As String = vbNullString
            MinR = vbNullString
            MinR = frmZreport.GetMinOR(a, POS, "ORno")
            MaxR = vbNullString
            MaxR = frmZreport.GetMaxOR(a, POS, "ORno")

            Dim cnt As Integer = 0
            Dim NetSale As Double = 0
            Dim NetVat As Double = 0
            Dim VatSale As Double = 0
            Dim VatExempt As Double = 0

            Dim OldSale As Double = 0
            Dim OldVat As Double = 0
            Dim OldVatSale As Double = 0
            Dim OldVatExempt As Double = 0

            Dim rsNZ As New Recordset
            rsNZ = conSqlPOS.Execute("CALL get_Zread('" & POS & "','" & a & "');")
            If rsNZ.EOF = False Then
                MinR = rsNZ("MinOR").Value
                MaxR = rsNZ("MaxOR").Value
                NetSale = CDbl(rsNZ("TotalNet").Value)
                NetVat = CDbl(rsNZ("TotalVat").Value)
                VatSale = CDbl(rsNZ("TotalVatSale").Value)
                VatExempt = CDbl(rsNZ("TotalVatExempt").Value)
                cnt = CInt(rsNZ("TotalTrans").Value)
            End If

            Dim rsOZ As New Recordset
            rsOZ = conSqlLoc.Execute("CALL get_OldzRead('" & a & "');")
            If rsOZ.EOF = False Then
                Try
                    OldSale = CDbl(rsOZ("oldTotalNet").Value)
                    OldVat = CDbl(rsOZ("oldTotalVat").Value)
                    OldVatSale = CDbl(rsOZ("oldTotalVatSale").Value)
                    OldVatExempt = CDbl(rsOZ("oldTotalVatExempt").Value)
                Catch ex As Exception

                End Try
            End If

            Dim NewSale As Double = NetSale + OldSale
            Dim NewVat As Double = NetVat + OldVat
            Dim NewVatSale As Double = VatSale + OldVatSale
            Dim NewVatExempt As Double = VatExempt + OldVatExempt

            Print("OR From : " & MinR)
            Print("OR To : " & MaxR)
            Print("Total Transaction : " & cnt.ToString)
            Print("Total Sales : " & "P " & MakeMoney(NetSale))

            If POSVer = "BIR BASED" Then
                Print("Total VAT Sales : " & "P " & MakeMoney(VatSale))
                Print("Total VAT Evempt : " & "P " & MakeMoney(VatExempt))
                Print("Total VAT Zero Rated : " & "P " & MakeMoney(0))
                Print("Total VAT : " & "P " & MakeMoney(NetVat))
            End If

            Print("          ")

            Print("Old Accumulated Sales : " & "P " & MakeMoney(OldSale))
            Print("New Accumulated Sales : " & "P " & MakeMoney(NewSale))
            'Print("Grand Total VAT Evempt : " & "P " & MakeMoney(NewVatExempt))
            'Print("Grand Total VAT Zero Rated : " & "P " & MakeMoney(0))
            'Print("Grand Total VAT : " & "P " & MakeMoney(NewVat))

            Print("                     ")
            Print("----------- End of Report -----------")

            frmZreport.savelast(a, NetSale, VatSale, VatExempt, NetVat)
            'zCnt = zCnt + 1
            'setZcounter(zCnt)

            Print("                     ")
            Print("                     ")

            Print(output)
            _P(PrintData)
        Catch ex As Exception
            Save_ErrLogs("[ZreadRaw] Ent_Raw_Print", ex.Message)
        End Try
    End Sub

    Public Function getZcounter() As String
        Try
            If conLocal() = False Then Return 1

            Dim rs As New Recordset
            rs = conSqlLoc.Execute("select ZreadCount from tblsetpos")
            If rs.EOF = False Then
                Return rs("ZreadCount").Value
            Else
                Return 1
            End If
        Catch ex As Exception
            Save_ErrLogs("[getZcounter] Ent_Raw_Print", ex.Message)
            Return 1
        End Try
    End Function

    Public Sub setZcounter(ByVal Zno As Long)
        Try
            If conLocal() = False Then Exit Sub

            Dim rs As New Recordset
            rs.Open("select ZreadCount from tblsetpos", conSqlLoc, 1, 2)
            rs("ZreadCount").Value = Zno
            rs.Update()
        Catch ex As Exception
            Save_ErrLogs("[setZcounter] Ent_Raw_Print", ex.Message)
        End Try
    End Sub
#End Region

#Region "Cash Out Report"
    Public Sub CashOut_rep(ByVal Opname As String, ByVal OrasdtIn As Date, ByVal LogAdmin As String)
        Try
            Dim output As String = Chr(&H1D) & "V" & Chr(66) & Chr(0)

            Print(My.Settings.TITLE)
            Print(My.Settings.N_OperatedBy)

            Print("----------------------------------------")
            Print("PARTIAL CASH OUT PRINT")
            Print("----------------------------------------")

            Dim BussDate As String = Format(OrasdtIn, "yyyy-MM-dd")
            Dim strStation As String = MainForm.txtStation.Text

            Print("Report Date : " & BussDate)
            Print("Operator : " & Opname)
            Print("Cash Out By : " & LogAdmin)
            Print("Station : " & strStation)

            Print("----------------------------------------")
            Print("CASH OUT BREAKDOWN")
            Print("----------------------------------------")

            Dim rs1 As New Recordset
            rs1 = New Recordset

            rs1 = conSqlLoc.Execute("select Denomination,Qty,TotalAmt from tblbreakdown order by Denomination desc")

            Do While rs1.EOF = False
                Dim Deno As String = rs1("Denomination").Value
                Dim DenoL As Integer = Len(Deno)
                Dim SpaceL As Integer = 9 - DenoL
                Dim spc As String = New String(" ", SpaceL)

                Print(Deno & spc & rs1("Qty").Value & "   " & "P " & MakeMoney(rs1("TotalAmt").Value))
                rs1.MoveNext()
            Loop

            Print("----------------------------------------")

            Print("Total Cash : " & "P " & MakeMoney(TotalCash()))

            Print("                     ")
            Print("Signature : ____________________________")
            Print("                     ")

            Print("----------- End of Report -----------")

            Print("                     ")
            Print("                     ")


            Print(output)
            _P(PrintData)
        Catch ex As Exception
            Save_ErrLogs("[CashOut_rep] Ent_Raw_Print", ex.Message)
        End Try
    End Sub

    Public Function TotalCash() As Double
        If conLocal() = False Then Return 0
        Try
            'Dim Petsa As String = Format(bussdt, "yyyy-MM-dd")

            Dim rs As New Recordset
            rs = New Recordset
            rs = conSqlLoc.Execute("select sum(TotalAmt) as TotalCash from tblbreakdown")

            If rs.EOF = False Then
                Return rs("TotalCash").Value
            Else
                Return 0
            End If
        Catch ex As Exception
            Return 0
        End Try
    End Function
#End Region
End Module
