Imports System.Drawing.Printing
Imports ADODB
Module Stay_In_Print
    Public WithEvents StayInPrint As PrintDocument '

    Public Sub PrntStayIn(ByVal Opname As String, ByVal OrasdtIn As Date, ByVal LogAdmin As String)
        OperatorName = Opname
        PetsaDtIn = OrasdtIn
        Logmin = LogAdmin

        StayInPrint = New PrintDocument
        ' Change the printer to the indicated printer
        StayInPrint.PrinterSettings.PrinterName = PRINTER_NAME

        If StayInPrint.PrinterSettings.IsValid Then
            StayInPrint.DocumentName = "Stay IN Print"
            ' Start printing
            Dim pp As New Printing.StandardPrintController
            StayInPrint.PrintController = pp
            StayInPrint.Print()
            StayInPrint.Dispose()
        Else
            MessageBox.Show("Printer is not available.", "Printer", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
        End If
    End Sub

    Private Sub StayIN_Print(ByVal sender As System.Object, ByVal e As PrintPageEventArgs) Handles StayInPrint.PrintPage

        Dim x As Integer = 2, y As Integer = 4, lineOffset As Integer

        ' Instantiate font objects used in printing.
        Dim printFont As New Font("Microsoft Sans Serif", 12, FontStyle.Bold, GraphicsUnit.Point) 'Substituted to FontA Font

        e.Graphics.PageUnit = GraphicsUnit.Point
        lineOffset = printFont.GetHeight(e.Graphics) - 4

        ' Print the receipt text
        y += (lineOffset * 1.0)
        e.Graphics.DrawString(My.Settings.TITLE, printFont, Brushes.Black, x, y - 9)
        printFont = New Font("Microsoft Sans Serif", 9, FontStyle.Regular, GraphicsUnit.Point) 'Substituted to FontA Font

        lineOffset = printFont.GetHeight(e.Graphics) - 4

        y += (lineOffset * 2.75)
        e.Graphics.DrawString(My.Settings.ADDR, printFont, Brushes.Black, x, y - 9)

        printFont = New Font("Microsoft Sans Serif", 9, FontStyle.Regular, GraphicsUnit.Point)
        lineOffset = printFont.GetHeight(e.Graphics) - 4

        y += (lineOffset * 0.5)
        e.Graphics.DrawString("___________________________________________________________________________", printFont, Brushes.Black, x, y - 4)
        y += (lineOffset * 2.2)
        e.Graphics.DrawString("STAY IN REPORT", printFont, Brushes.Black, x + 22, y - 5)
        printFont = New Font("Microsoft Sans Serif", 9, FontStyle.Bold, GraphicsUnit.Point)
        lineOffset = printFont.GetHeight(e.Graphics) - 4
        y += (lineOffset * 0.7)
        e.Graphics.DrawString("___________________________________________________________________________", printFont, Brushes.Black, x, y - 6)

        printFont = New Font("Microsoft Sans Serif", 9, FontStyle.Regular, GraphicsUnit.Point) 'Substituted to FontA Font

        Dim time1 As Date = PetsaDtIn
        Dim strOp As String = OperatorName
        Dim strStation As String = MainForm.txtStation.Text

        y += (lineOffset * 3.0)
        e.Graphics.DrawString("Bussiness Date : ", printFont, Brushes.Black, x, y - 5)
        e.Graphics.DrawString(Format(time1, "yyyy-MM-dd"), printFont, Brushes.Black, x + 75, y - 5)

        y += (lineOffset * 2.0)
        e.Graphics.DrawString("Operator : ", printFont, Brushes.Black, x, y - 5)
        e.Graphics.DrawString(strOp, printFont, Brushes.Black, x + 75, y - 5)

        y += (lineOffset * 2.0)
        e.Graphics.DrawString("Generated By : ", printFont, Brushes.Black, x, y - 5)
        e.Graphics.DrawString(Logmin, printFont, Brushes.Black, x + 75, y - 5)

        y += (lineOffset * 2.0)
        e.Graphics.DrawString("Station : ", printFont, Brushes.Black, x, y - 5)
        e.Graphics.DrawString(strStation, printFont, Brushes.Black, x + 75, y - 5)

        y += (lineOffset * 1.5)
        e.Graphics.DrawString("___________________________________________________________________________", printFont, Brushes.Black, x, y - 3)
        y += (lineOffset * 2.2)
        e.Graphics.DrawString("Stay In Vehicles", printFont, Brushes.Black, x, y - 5)
        y += (lineOffset * 0.7)
        e.Graphics.DrawString("___________________________________________________________________________", printFont, Brushes.Black, x, y - 5)

        Dim rs1 As New Recordset
        Dim lup As Long
        rs1 = New Recordset

        rs1 = conSqlPOS.Execute("select Plate,TimeIn from timeindb order by TimeIn")
        If rs1.EOF = False Then
            For lup = 1 To rs1.RecordCount
                Sleep(30)
                y += (lineOffset * 2.0)
                e.Graphics.DrawString(rs1("Plate").Value, printFont, Brushes.Black, x, y - 5)
                e.Graphics.DrawString(rs1("TimeIn").Value, printFont, Brushes.Black, x + 65, y - 5)
                rs1.MoveNext()
            Next
        End If

        y += (lineOffset * 0.9)
        e.Graphics.DrawString("___________________________________________________________________________", printFont, Brushes.Black, x, y - 5)

        y += (lineOffset * 3.0)
        e.Graphics.DrawString("****** END OF REPORT ******", printFont, Brushes.Black, x - 2, y - 5)


        e.HasMorePages = False
    End Sub
End Module
